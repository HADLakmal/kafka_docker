version: "2"

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "${ZOOKEEPER_DATA}:/opt/zookeeper-3.4.13/data"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: wurstmeister/kafka:2.13-2.7.2
    container_name: "kafka-01"
    hostname: kafka-01
    ports:
      - "29092:29092"
    volumes:
      - "${KAFKA_DATA}:/kafka"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=INSIDE://:9092,OUTSIDE://:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka-01:9092,OUTSIDE://localhost:29092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=miwayz.demand.trips:1:1:compact,miwayz.demand.trip.jobs:1:1:compact
    depends_on:
      - zookeeper

  schemaregistry:
    image: confluentinc/cp-schema-registry:5.1.2
    container_name: zg_core_schema_registry
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka-01:9092
      - SCHEMA_REGISTRY_HOST_NAME=schemaregistry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    ports:
      - 8081:8081

  kowl:
    image: docker.redpanda.com/vectorized/console:latest
    container_name: "kowl"
    hostname: kowl
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_SCHEMAREGISTRY_ENABLED=true
      - KAFKA_SCHEMAREGISTRY_URLS=http://schemaregistry:8081
    depends_on:
      - zookeeper
      - kafka
      - schemaregistry

